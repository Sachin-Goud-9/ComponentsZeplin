{"ast":null,"code":"import jobCardDetails from '../organisms/RenderJobCards/jobCardDetails';\nimport { FINDJOB, SAVEJOB } from './types';\nconst initialState = {\n  jobsInFindJobs: jobCardDetails,\n  jobsInSavedJobs: []\n};\n\nconst jobReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case FINDJOB:\n      return { ...state.jobsInFindJobs\n      };\n\n    case SAVEJOB:\n      const len = Object.keys(state.jobsInSavedJobs).length;\n\n      const isAvailable = () => {\n        for (var i = 0; i < len; i++) {\n          if (state.jobsInSavedJobs[i].id === action.job.id) {\n            return true;\n          }\n\n          return false;\n        }\n      }; // const jobs = state.jobsInSavedJobs.filter((job) => job.id === action.job.id)\n      // if(isAvailable){\n      //         return{\n      //             state\n      //         }\n      //     }\n      //     else{\n      //     return{    \n      //     ...state,\n      //     jobsInSavedJobs: [...state.jobsInSavedJobs,action.job]\n      //     }};\n\n\n      return { ...state,\n        jobsInSavedJobs: [...state.jobsInSavedJobs, action.job] // jobsInSavedJobs: jobs\n\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default jobReducer;","map":{"version":3,"sources":["/home/saching/reactjs-files/reactprojects/GreenCommute/componentstesting/src/store/reducer.js"],"names":["jobCardDetails","FINDJOB","SAVEJOB","initialState","jobsInFindJobs","jobsInSavedJobs","jobReducer","state","action","type","len","Object","keys","length","isAvailable","i","id","job"],"mappings":"AAAA,OAAOA,cAAP,MAA2B,4CAA3B;AACA,SAASC,OAAT,EAAkBC,OAAlB,QAAiC,SAAjC;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,cAAc,EAAEJ,cADC;AAEjBK,EAAAA,eAAe,EAAE;AAFA,CAArB;;AAKA,MAAMC,UAAU,GAAG,CAACC,KAAK,GAAGJ,YAAT,EAAuBK,MAAvB,KAAkC;AACjD,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKR,OAAL;AACI,aAAO,EACH,GAAGM,KAAK,CAACH;AADN,OAAP;;AAGJ,SAAKF,OAAL;AACI,YAAMQ,GAAG,GAAGC,MAAM,CAACC,IAAP,CAAYL,KAAK,CAACF,eAAlB,EAAmCQ,MAA/C;;AACA,YAAMC,WAAW,GAAG,MAAM;AAAE,aAAI,IAAIC,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACL,GAAd,EAAkBK,CAAC,EAAnB,EAAsB;AAC9C,cAAGR,KAAK,CAACF,eAAN,CAAsBU,CAAtB,EAAyBC,EAAzB,KAA8BR,MAAM,CAACS,GAAP,CAAWD,EAA5C,EAA+C;AAC3C,mBAAO,IAAP;AACH;;AACD,iBAAO,KAAP;AACH;AAAC,OALF,CAFJ,CAQI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,aAAM,EACF,GAAGT,KADD;AAEFF,QAAAA,eAAe,EAAE,CAAC,GAAGE,KAAK,CAACF,eAAV,EAA0BG,MAAM,CAACS,GAAjC,CAFf,CAGF;;AAHE,OAAN;;AAKJ;AACI,aAAOV,KAAP;AA9BR;AAgCH,CAjCD;;AAmCA,eAAeD,UAAf","sourcesContent":["import jobCardDetails from '../organisms/RenderJobCards/jobCardDetails';\nimport { FINDJOB, SAVEJOB } from './types';\n\nconst initialState = {\n    jobsInFindJobs: jobCardDetails,\n    jobsInSavedJobs: [],\n};\n\nconst jobReducer = (state = initialState, action) => {\n    switch(action.type){\n        case FINDJOB:\n            return {\n                ...state.jobsInFindJobs\n            }\n        case SAVEJOB:\n            const len = Object.keys(state.jobsInSavedJobs).length\n            const isAvailable = () => { for(var i=0;i<len;i++){\n                if(state.jobsInSavedJobs[i].id===action.job.id){\n                    return true;\n                }\n                return false;\n            }}\n            // const jobs = state.jobsInSavedJobs.filter((job) => job.id === action.job.id)\n            // if(isAvailable){\n            //         return{\n            //             state\n            //         }\n            //     }\n            //     else{\n            //     return{    \n            //     ...state,\n            //     jobsInSavedJobs: [...state.jobsInSavedJobs,action.job]\n            //     }};\n            return{\n                ...state,\n                jobsInSavedJobs: [...state.jobsInSavedJobs,action.job]\n                // jobsInSavedJobs: jobs\n            }\n        default:\n            return state;\n    }\n};\n\nexport default jobReducer;"]},"metadata":{},"sourceType":"module"}