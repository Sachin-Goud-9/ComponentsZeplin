{"ast":null,"code":"var _jsxFileName = \"/home/saching/reactjs-files/reactprojects/GreenCommute/componentstesting/src/molecules/stepper/CustomStepper.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Button, Typography } from '@material-ui/core';\nimport { Step, Stepper, StepLabel } from '@material-ui/core';\nimport { ThemeProvider } from '@material-ui/styles';\nimport customtheme from '../../theme';\nimport { withStyles } from '@material-ui/styles';\nimport { StepConnector } from '@material-ui/core';\nimport Customtextfield from '../textfield/customtextfield'; // import Mybutton from '../button/mybutton';\n// function getSteps() {\n//     return ['Your Location', 'Job Location', 'Your Skills'];\n// }\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QontoConnector = withStyles({\n  active: {\n    '& $line': {\n      borderColor: '#ffffff'\n    }\n  },\n  completed: {\n    '& $line': {\n      borderColor: '#ffffff'\n    }\n  },\n  line: {\n    borderColor: '#ffffff',\n    borderTopWidth: 3,\n    borderRadius: 1\n  }\n})(StepConnector);\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%'\n  },\n  button: {\n    marginRight: theme.spacing(1)\n  },\n  instructions: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1)\n  },\n  iconContainer: {\n    // define styles for icon container\n    transform: 'scale(2)'\n  }\n}));\nexport default function HorizontalLinearStepper(props) {\n  _s();\n\n  const classes = useStyles();\n  const [activeStep, setActiveStep] = React.useState(0);\n  const [skipped, setSkipped] = React.useState(new Set());\n  const steps = ['Your Location', 'Job Location', 'Your Skills']; // const steps = props.steps;\n\n  const isStepOptional = step => {\n    return step === 1;\n  };\n\n  const isStepSkipped = step => {\n    return skipped.has(step);\n  };\n\n  const handleNext = () => {\n    let newSkipped = skipped;\n\n    if (isStepSkipped(activeStep)) {\n      newSkipped = new Set(newSkipped.values());\n      newSkipped.delete(activeStep);\n    }\n\n    setActiveStep(prevActiveStep => prevActiveStep + 1);\n    setSkipped(newSkipped);\n  };\n\n  const handleBack = () => {\n    setActiveStep(prevActiveStep => prevActiveStep - 1);\n  };\n\n  const handleSkip = () => {\n    if (!isStepOptional(activeStep)) {\n      // You probably want to guard against something like this,\n      // it should never occur unless someone's actively trying to break something.\n      throw new Error(\"You can't skip a step that isn't optional.\");\n    }\n\n    setActiveStep(prevActiveStep => prevActiveStep + 1);\n    setSkipped(prevSkipped => {\n      const newSkipped = new Set(prevSkipped.values());\n      newSkipped.add(activeStep);\n      return newSkipped;\n    });\n  };\n\n  const handleReset = () => {\n    setActiveStep(0);\n  };\n\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: customtheme,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Stepper, {\n        activeStep: activeStep,\n        connector: /*#__PURE__*/_jsxDEV(QontoConnector, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 58\n        }, this),\n        children: steps.map((label, index) => {\n          const stepProps = {};\n          const labelProps = {};\n\n          if (isStepSkipped(index)) {\n            stepProps.completed = false;\n          }\n\n          return /*#__PURE__*/_jsxDEV(Step, { ...stepProps,\n            children: /*#__PURE__*/_jsxDEV(StepLabel, { ...labelProps,\n              children: label\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 21\n            }, this)\n          }, label, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          style: {\n            padding: \"200px 50px 50px 50px\"\n          },\n          children: \"More than 2000 people are using Green Commute\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          children: \"Where do you stay?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          children: /*#__PURE__*/_jsxDEV(Customtextfield, {\n            comment: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: activeStep === steps.length ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            className: classes.instructions,\n            children: \"All steps completed - you're finished\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: handleReset,\n            className: classes.button,\n            children: \"Reset\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              disabled: activeStep === 0,\n              onClick: handleBack,\n              className: classes.button,\n              children: \"Back\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 17\n            }, this), isStepOptional(activeStep) && /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              color: \"primary\",\n              onClick: handleSkip,\n              className: classes.button,\n              children: \"Skip\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              color: \"primary\",\n              onClick: handleNext,\n              className: classes.button,\n              children: activeStep === steps.length - 1 ? 'Finish' : 'Next'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 5\n  }, this);\n}\n\n_s(HorizontalLinearStepper, \"aJUD1D1H2rPGWFuSD9z2Ae7+Ypg=\", false, function () {\n  return [useStyles];\n});\n\n_c = HorizontalLinearStepper;\n\nvar _c;\n\n$RefreshReg$(_c, \"HorizontalLinearStepper\");","map":{"version":3,"sources":["/home/saching/reactjs-files/reactprojects/GreenCommute/componentstesting/src/molecules/stepper/CustomStepper.js"],"names":["React","makeStyles","Button","Typography","Step","Stepper","StepLabel","ThemeProvider","customtheme","withStyles","StepConnector","Customtextfield","QontoConnector","active","borderColor","completed","line","borderTopWidth","borderRadius","useStyles","theme","root","width","button","marginRight","spacing","instructions","marginTop","marginBottom","iconContainer","transform","HorizontalLinearStepper","props","classes","activeStep","setActiveStep","useState","skipped","setSkipped","Set","steps","isStepOptional","step","isStepSkipped","has","handleNext","newSkipped","values","delete","prevActiveStep","handleBack","handleSkip","Error","prevSkipped","add","handleReset","map","label","index","stepProps","labelProps","padding","length"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Button, Typography } from '@material-ui/core';\nimport { Step, Stepper, StepLabel } from '@material-ui/core';\nimport { ThemeProvider } from '@material-ui/styles';\nimport customtheme from '../../theme';\nimport { withStyles } from '@material-ui/styles';\nimport { StepConnector } from '@material-ui/core';\nimport Customtextfield from '../textfield/customtextfield';\n// import Mybutton from '../button/mybutton';\n\n// function getSteps() {\n//     return ['Your Location', 'Job Location', 'Your Skills'];\n// }\n\nconst QontoConnector = withStyles({\n    active: {\n      '& $line': {\n        borderColor: '#ffffff',\n      },\n    },\n    completed: {\n      '& $line': {\n        borderColor: '#ffffff',\n      },\n    },\n    line: {\n      borderColor: '#ffffff',\n      borderTopWidth: 3,\n      borderRadius: 1,\n    },\n  })(StepConnector);\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      width: '100%',\n    },\n    button: {\n      marginRight: theme.spacing(1),\n    },\n    instructions: {\n      marginTop: theme.spacing(1),\n      marginBottom: theme.spacing(1),\n    },\n    iconContainer: { // define styles for icon container\n        transform: 'scale(2)',\n    },\n    \n  }));\n\nexport default function HorizontalLinearStepper(props) {\n    const classes = useStyles();\n    const [activeStep, setActiveStep] = React.useState(0);\n    const [skipped, setSkipped] = React.useState(new Set());\n    const steps= ['Your Location', 'Job Location', 'Your Skills'];\n    // const steps = props.steps;\n  \n    const isStepOptional = (step) => {\n      return step === 1;\n    };\n  \n    const isStepSkipped = (step) => {\n      return skipped.has(step);\n    };\n  \n    const handleNext = () => {\n      let newSkipped = skipped;\n      if (isStepSkipped(activeStep)) {\n        newSkipped = new Set(newSkipped.values());\n        newSkipped.delete(activeStep);\n      }\n  \n      setActiveStep((prevActiveStep) => prevActiveStep + 1);\n      setSkipped(newSkipped);\n    };\n  \n    const handleBack = () => {\n      setActiveStep((prevActiveStep) => prevActiveStep - 1);\n    };\n  \n    const handleSkip = () => {\n      if (!isStepOptional(activeStep)) {\n        // You probably want to guard against something like this,\n        // it should never occur unless someone's actively trying to break something.\n        throw new Error(\"You can't skip a step that isn't optional.\");\n      }\n  \n      setActiveStep((prevActiveStep) => prevActiveStep + 1);\n      setSkipped((prevSkipped) => {\n        const newSkipped = new Set(prevSkipped.values());\n        newSkipped.add(activeStep);\n        return newSkipped;\n      });\n    };\n  \n    const handleReset = () => {\n      setActiveStep(0);\n    };\n  \n    return (\n    <ThemeProvider theme = {customtheme}>\n      <div >\n            <Stepper activeStep={activeStep}  connector={<QontoConnector />}>\n            {steps.map((label, index) => {\n                const stepProps = {};\n                const labelProps = {};\n            \n                if (isStepSkipped(index)) {\n                stepProps.completed = false;\n                }\n                return (\n                <Step key={label} {...stepProps}>\n                    <StepLabel {...labelProps} >{label}</StepLabel>\n                </Step>\n                );\n            })}\n            </Stepper>\n            <div>\n              <Typography style={{ padding: \"200px 50px 50px 50px\"}}>\n              More than 2000 people are using\n              Green Commute \n              </Typography>\n              <Typography>\n              Where do you stay?\n              </Typography>\n              <Typography>\n                <Customtextfield comment=\"\"/>\n              </Typography>\n            </div>\n        <div>\n          {activeStep === steps.length ? (\n            <div>\n              <Typography className={classes.instructions}>\n                All steps completed - you&apos;re finished\n              </Typography>\n              <Button onClick={handleReset} className={classes.button}>\n                Reset\n              </Button>\n            </div>\n          ) : (\n            <div>\n              <div>\n                <Button disabled={activeStep === 0} onClick={handleBack} className={classes.button}>\n                  Back\n                </Button>\n                {isStepOptional(activeStep) && (\n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick={handleSkip}\n                    className={classes.button}\n                  >\n                    Skip\n                  </Button>\n                )}\n  \n                <Button\n                  variant=\"contained\"\n                  color=\"primary\"\n                  onClick={handleNext}\n                  className={classes.button}\n                >\n                  {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\n                </Button>\n              </div>\n            </div>\n          )}\n        </div>\n      </div>\n      </ThemeProvider>\n    );\n  }"]},"metadata":{},"sourceType":"module"}