{"ast":null,"code":"var _jsxFileName = \"/home/saching/reactjs-files/reactprojects/GreenCommute/componentstesting/src/molecules/JobCard/JobCardForPage2.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport MyTypography from \"../../atoms/MyTypography/MyTypography\";\nimport MyImage from \"../../atoms/MyImage/MyImage\";\nimport MoreHorizIcon from \"@material-ui/icons/MoreHoriz\";\nimport { Button, CardActions, Grid } from \"@material-ui/core\";\nimport { useDispatch } from \"react-redux\";\nimport { showJob } from \"../../store/actions\";\nimport { LocalTaxiOutlined } from \"@material-ui/icons\";\nimport LocalTaxiOutlinedIcon from '@material-ui/icons/LocalTaxiOutlined';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  root: {\n    width: '330px',\n    height: '308px',\n    margin: \"20px 30px 20px 60px\"\n  },\n  root2: {\n    maxWidth: '690px',\n    maxHeight: '138px',\n    padding: '1.5%',\n    borderRadius: '10px'\n  },\n  logoPadding: {\n    padding: \"5% 3% 3% 5%\"\n  },\n  header: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\"\n  },\n  spacing: {\n    display: \"flex\",\n    width: '65px',\n    paddingRight: \"5%\",\n    justifyContent: \"space-around\"\n  },\n  inCol: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"space-between\"\n  },\n  iconGrp: {\n    display: 'inline-flex',\n    flexDirection: 'row',\n    gap: '8px'\n  },\n  roleTypoHeader: {\n    fontSize: '18px',\n    fontFamily: 'Montserrat',\n    fontWeight: '600',\n    color: '#324552',\n    lineHeight: 1.33,\n    fontStretch: 'normal',\n    fontStyle: 'normal',\n    letterSpacing: '0.2px'\n  },\n  companyLocationTypoHeader: {\n    fontSize: '16px',\n    fontFamily: 'Montserrat',\n    fontWeight: 'normal',\n    color: '#5f7381',\n    lineHeight: 1.57,\n    fontStretch: 'normal',\n    fontStyle: 'normal',\n    letterSpacing: '0.1px',\n    paddingTop: '2%'\n  },\n  commuteRoutesTypo: {\n    fontSize: '14px',\n    fontFamily: 'Montserrat',\n    fontWeight: 500,\n    color: '#19293b',\n    lineHeight: 1.33,\n    fontStretch: 'normal',\n    fontStyle: 'normal',\n    letterSpacing: '0.2px',\n    paddingTop: '7%'\n  },\n  padding: {\n    paddingTop: '0',\n    lineHeight: 1.33\n  },\n  jobInfoPadding: {\n    paddingLeft: '20px'\n  },\n  icons: {\n    color: 'red'\n  }\n});\nexport function JobCardForPage2( // \t{\n// \tlogo,\n// \troleName,\n// \tcompanyName,\n// \tlocation,\n// \ticons,\n// }\nprops) {\n  _s();\n\n  const classes = useStyles();\n  const [open, setOpen] = useState(true);\n  const icons = [\"LocalTaxiOutlinedIcon\", \"TrainOutlined\", \"DirectionsBusOutlined\", \"MotorcycleOutlined\"];\n  const dispatch = useDispatch();\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      className: classes.root,\n      variant: \"outlined\",\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        direction: \"row\",\n        className: classes.header,\n        children: [/*#__PURE__*/_jsxDEV(MyImage, {\n          className: classes.logoPadding,\n          alt: props.job.logo,\n          src: props.job.logo,\n          width: \"80px\",\n          height: \"80px\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 8\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          direction: \"row\",\n          className: ` ${classes.spacing}`,\n          children: [/*#__PURE__*/_jsxDEV(MyTypography, {\n            variant: \"body1\",\n            component: \"p\",\n            children: \"2d\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(MoreHorizIcon, {\n            className: classes.moreIconPadding,\n            fontSize: \"small\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 8\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          direction: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(MyTypography, {\n            gutterBottom: true,\n            className: classes.roleTypoHeader,\n            children: props.job.roleName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(MyTypography, {\n            className: classes.companyLocationTypoHeader,\n            children: props.job.companyName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(MyTypography, {\n            className: classes.companyLocationTypoHeader,\n            children: props.job.location\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(MyTypography, {\n            gutterBottom: true,\n            className: classes.commuteRoutesTypo,\n            children: \"Commute routes available:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.iconGrp,\n            children: icons && icons.map(iconName =>\n            /*#__PURE__*/\n            // <iconName className={classes.icons} /> \n            _jsxDEV(\"span\", {\n              children: [iconName, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 10\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 8\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 8\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 4\n  }, this) // </div>\n  ; // return (\n  // \t<div\n  // \t\tonClick={() => {\n  // \t\t\tsetOpen(!open);\n  // \t\t}}\n  // \t>\n  // \t\t<Card variant=\"outlined\" className={classes.root2}>\n  // \t\t\t<CardActionArea>\n  // \t\t\t\t<Grid container>\n  // \t\t\t\t\t<Grid item xs={1}>\n  // \t\t\t\t\t\t<MyImage alt={props.logo} src={props.logo} width=\"50px\" height=\"50px\" />\n  // \t\t\t\t\t</Grid>\n  // \t\t\t\t\t<Grid item xs={8} className={classes.jobInfoPadding}>\n  // \t\t\t\t\t\t<MyTypography gutterBottom className={classes.roleTypoHeader}>\n  // \t\t\t\t\t\t\t{props.roleName}\n  // \t\t\t\t\t\t</MyTypography>\n  // \t\t\t\t\t\t<MyTypography\n  // \t\t\t\t\t\t\tclassName={` ${classes.companyLocationTypoHeader} ${classes.padding} `}\n  // \t\t\t\t\t\t>\n  // \t\t\t\t\t\t\t{props.companyName}\n  // \t\t\t\t\t\t</MyTypography>\n  // \t\t\t\t\t\t<MyTypography\n  // \t\t\t\t\t\t\tclassName={` ${classes.companyLocationTypoHeader} `}\n  // \t\t\t\t\t\t>\n  // \t\t\t\t\t\t\t{props.location}\n  // \t\t\t\t\t\t</MyTypography>\n  // \t\t\t\t\t</Grid>\n  //                     <Grid item xs={1}></Grid>\n  // \t\t\t\t\t<Grid item xs={2} className={classes.inCol}>\n  // \t\t\t\t\t\t<div className={classes.spacing}>\n  // \t\t\t\t\t\t\t<MyTypography variant=\"body1\" component=\"p\">\n  // \t\t\t\t\t\t\t\t2d\n  // \t\t\t\t\t\t\t</MyTypography>\n  // \t\t\t\t\t\t\t<MoreHorizIcon fontSize=\"small\" />\n  // \t\t\t\t\t\t</div>\n  //                         <div className={classes.iconGrp}> \n  //                             {icons && Object.keys(icons).map(iconName => (\n  //                                 <span>{iconName} </span>\n  //                             ))}\n  //                         </div> \n  // \t\t\t\t\t</Grid>\n  // \t\t\t\t</Grid>\n  // \t\t\t</CardActionArea>\n  // \t\t</Card>\n  // \t</div>\n  // );\n}\n\n_s(JobCardForPage2, \"kaPkrjFVwviYQ24vmM452HTiSbA=\", false, function () {\n  return [useStyles, useDispatch];\n});\n\n_c = JobCardForPage2;\n\nvar _c;\n\n$RefreshReg$(_c, \"JobCardForPage2\");","map":{"version":3,"sources":["/home/saching/reactjs-files/reactprojects/GreenCommute/componentstesting/src/molecules/JobCard/JobCardForPage2.js"],"names":["React","useState","makeStyles","Card","CardActionArea","CardContent","MyTypography","MyImage","MoreHorizIcon","Button","CardActions","Grid","useDispatch","showJob","LocalTaxiOutlined","LocalTaxiOutlinedIcon","useStyles","root","width","height","margin","root2","maxWidth","maxHeight","padding","borderRadius","logoPadding","header","display","justifyContent","alignItems","spacing","paddingRight","inCol","flexDirection","iconGrp","gap","roleTypoHeader","fontSize","fontFamily","fontWeight","color","lineHeight","fontStretch","fontStyle","letterSpacing","companyLocationTypoHeader","paddingTop","commuteRoutesTypo","jobInfoPadding","paddingLeft","icons","JobCardForPage2","props","classes","open","setOpen","dispatch","job","logo","moreIconPadding","roleName","companyName","location","map","iconName"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardContent from \"@material-ui/core/CardContent\";\n\nimport MyTypography from \"../../atoms/MyTypography/MyTypography\";\nimport MyImage from \"../../atoms/MyImage/MyImage\";\nimport MoreHorizIcon from \"@material-ui/icons/MoreHoriz\";\nimport { Button, CardActions, Grid } from \"@material-ui/core\";\nimport { useDispatch } from \"react-redux\";\nimport { showJob } from \"../../store/actions\";\nimport { LocalTaxiOutlined } from \"@material-ui/icons\";\nimport LocalTaxiOutlinedIcon from '@material-ui/icons/LocalTaxiOutlined';\n\n\nconst useStyles = makeStyles({\n\troot: {\n\t\twidth: '330px',\n\t\theight: '308px',\n\t\tmargin: \"20px 30px 20px 60px\",\n\t},\n\troot2: {\n\t\tmaxWidth: '690px',\n\t\tmaxHeight: '138px',\n        padding : '1.5%',\n        borderRadius : '10px'\n\t},\n\tlogoPadding: {\n\t\tpadding: \"5% 3% 3% 5%\",\n\t},\n\theader: {\n\t\tdisplay: \"flex\",\n\t\tjustifyContent: \"space-between\",\n\t\talignItems: \"center\",\n\t},\n\tspacing: {\n\t\tdisplay: \"flex\",\n        width : '65px',\n\t\tpaddingRight: \"5%\",\n\t\tjustifyContent: \"space-around\",\n\t},\n\tinCol: {\n\t\tdisplay: \"flex\",\n\t\tflexDirection: \"column\",\n\t\tjustifyContent: \"space-between\",\n\t},\n    iconGrp : {\n        display : 'inline-flex',\n        flexDirection : 'row',\n        gap : '8px'\n    },\n    roleTypoHeader : {\n        fontSize : '18px',\n        fontFamily : 'Montserrat',\n        fontWeight : '600',\n        color : '#324552',\n        lineHeight : 1.33,\n        fontStretch: 'normal',\n        fontStyle: 'normal',\n        letterSpacing : '0.2px'\n    },\n    companyLocationTypoHeader : {\n        fontSize : '16px',\n        fontFamily : 'Montserrat',\n        fontWeight : 'normal',\n        color : '#5f7381',\n        lineHeight : 1.57,\n        fontStretch: 'normal',\n        fontStyle: 'normal',\n        letterSpacing : '0.1px',\n        paddingTop : '2%'\n    },\n    commuteRoutesTypo : {\n        fontSize : '14px',\n        fontFamily : 'Montserrat',\n        fontWeight : 500,\n        color : '#19293b',\n        lineHeight : 1.33,\n        fontStretch: 'normal',\n        fontStyle: 'normal',\n        letterSpacing : '0.2px',\n        paddingTop : '7%'  \n    },\n    padding : {\n        paddingTop : '0',\n        lineHeight : 1.33\n    },\n    jobInfoPadding : {\n        paddingLeft : '20px'\n    },\n\ticons : {\n\t\tcolor : 'red'\n\t}\n});\n\nexport function JobCardForPage2(\n// \t{\n// \tlogo,\n// \troleName,\n// \tcompanyName,\n// \tlocation,\n// \ticons,\n// }\nprops\n) {\n\tconst classes = useStyles();\n\tconst [open, setOpen] = useState(true);\n\tconst icons = [\"LocalTaxiOutlinedIcon\", \"TrainOutlined\" , \"DirectionsBusOutlined\"  , \"MotorcycleOutlined\" ]\n\tconst dispatch = useDispatch();\n\n\n\t\treturn (\n\t\t\t<Grid>\n\t\t\t\t<Card className={classes.root} variant=\"outlined\">\n\t\t\t\t\t{/* <CardActionArea onClick = { () => { dispatch(showJob(props.job)) }}> */}\n\t\t\t\t\t\t{/* <Button onClick={() => { console.log(\"Clicked Card.\") }}> */}\n\t\t\t\t\t\t<Grid container direction=\"row\" className={classes.header}>\n\t\t\t\t\t\t\t<MyImage\n\t\t\t\t\t\t\t\tclassName={classes.logoPadding}\n\t\t\t\t\t\t\t\talt={props.job.logo}\n\t\t\t\t\t\t\t\tsrc={props.job.logo}\n\t\t\t\t\t\t\t\twidth=\"80px\"\n\t\t\t\t\t\t\t\theight=\"80px\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<Grid item direction=\"row\" className={` ${classes.spacing}`}>\n\t\t\t\t\t\t\t\t<MyTypography variant=\"body1\" component=\"p\">\n\t\t\t\t\t\t\t\t\t2d\n\t\t\t\t\t\t\t\t</MyTypography>\n\t\t\t\t\t\t\t\t<MoreHorizIcon\n\t\t\t\t\t\t\t\t\tclassName={classes.moreIconPadding}\n\t\t\t\t\t\t\t\t\tfontSize=\"small\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t<CardContent>\n\t\t\t\t\t\t\t<Grid container direction=\"row\">\n\t\t\t\t\t\t\t<MyTypography gutterBottom className={classes.roleTypoHeader}>\n\t\t\t\t\t\t\t\t{ props.job.roleName }\n\t\t\t\t\t\t\t</MyTypography>\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t<MyTypography\n                                className={classes.companyLocationTypoHeader} \n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{props.job.companyName}\n\t\t\t\t\t\t\t</MyTypography>\n\t\t\t\t\t\t\t<MyTypography\n                                className={classes.companyLocationTypoHeader}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{props.job.location}\n\t\t\t\t\t\t\t</MyTypography>\n\n\t\t\t\t\t\t\t<MyTypography gutterBottom className={classes.commuteRoutesTypo}>\n\t\t\t\t\t\t\t\tCommute routes available:\n\t\t\t\t\t\t\t</MyTypography>\n\t\t\t\t\t\t\t{/* {Object.values(icons).map((value) => value)} */}\n\t\t\t\t\t\t\t<div className={classes.iconGrp}> \n                                {icons && icons.map(iconName => (\n                                    // <iconName className={classes.icons} /> \n\t\t\t\t\t\t\t\t\t<span>{iconName} </span>\n                                ))}\n\t\t\t\t\t\t\t\t{/* <LocalTaxiOutlined/> */}\n                            </div> \n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t</CardContent>\n\t\t\t\t\t\t{/* </Button> */}\n\t\t\t\t\t{/* </CardActionArea> */}\n\t\t\t\t</Card>\n\t\t\t\t</Grid>\n\t\t\t// </div>\n\t\t);\n\t\t// return (\n\t\t// \t<div\n\t\t// \t\tonClick={() => {\n\t\t// \t\t\tsetOpen(!open);\n\t\t// \t\t}}\n\t\t// \t>\n                \n\t\t// \t\t<Card variant=\"outlined\" className={classes.root2}>\n\t\t// \t\t\t<CardActionArea>\n\t\t// \t\t\t\t<Grid container>\n\t\t// \t\t\t\t\t<Grid item xs={1}>\n\t\t// \t\t\t\t\t\t<MyImage alt={props.logo} src={props.logo} width=\"50px\" height=\"50px\" />\n\t\t// \t\t\t\t\t</Grid>\n\t\t// \t\t\t\t\t<Grid item xs={8} className={classes.jobInfoPadding}>\n\t\t// \t\t\t\t\t\t<MyTypography gutterBottom className={classes.roleTypoHeader}>\n\t\t// \t\t\t\t\t\t\t{props.roleName}\n\t\t// \t\t\t\t\t\t</MyTypography>\n\n\t\t// \t\t\t\t\t\t<MyTypography\n\t\t// \t\t\t\t\t\t\tclassName={` ${classes.companyLocationTypoHeader} ${classes.padding} `}\n\t\t// \t\t\t\t\t\t>\n\t\t// \t\t\t\t\t\t\t{props.companyName}\n\t\t// \t\t\t\t\t\t</MyTypography>\n\t\t// \t\t\t\t\t\t<MyTypography\n\t\t// \t\t\t\t\t\t\tclassName={` ${classes.companyLocationTypoHeader} `}\n\t\t// \t\t\t\t\t\t>\n\t\t// \t\t\t\t\t\t\t{props.location}\n\t\t// \t\t\t\t\t\t</MyTypography>\n\t\t// \t\t\t\t\t</Grid>\n        //                     <Grid item xs={1}></Grid>\n\t\t// \t\t\t\t\t<Grid item xs={2} className={classes.inCol}>\n\t\t// \t\t\t\t\t\t<div className={classes.spacing}>\n\t\t// \t\t\t\t\t\t\t<MyTypography variant=\"body1\" component=\"p\">\n\t\t// \t\t\t\t\t\t\t\t2d\n\t\t// \t\t\t\t\t\t\t</MyTypography>\n\t\t// \t\t\t\t\t\t\t<MoreHorizIcon fontSize=\"small\" />\n\t\t// \t\t\t\t\t\t</div>\n        //                         <div className={classes.iconGrp}> \n        //                             {icons && Object.keys(icons).map(iconName => (\n        //                                 <span>{iconName} </span>\n        //                             ))}\n                                   \n        //                         </div> \n\t\t// \t\t\t\t\t</Grid>\n\t\t// \t\t\t\t</Grid>\n\t\t// \t\t\t</CardActionArea>\n\t\t// \t\t</Card>\n\t\t// \t</div>\n\t\t// );\n\t\n}"]},"metadata":{},"sourceType":"module"}